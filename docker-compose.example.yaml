version: '3.8'

services:
  # backend
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/postgres/initdb.d:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  express:
    build:
      context: .
      dockerfile: ./backend/express/Dockerfile
    ports:
      - '${BACKEND_PORT}:${BACKEND_PORT}'
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BACKEND_PORT: ${BACKEND_PORT}
      NODE_ENV: development
    volumes:
      - ./backend/express/src:/app/src
      - ./backend/express/package.json:/app/package.json
      - ./backend/express/tsconfig.json:/app/tsconfig.json
      - ./backend/express/prisma:/app/prisma
      - ./shared:/app/shared
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && yarn start" Ñ‡

volumes:
  postgres_data:
